# Cache downloads in ~/.ghcup/cache
cache: False
# Skip tarball checksum verification
no-verify: False
# enable verbosity
verbose: False
# When to keep build directories
keep-dirs: Errors  # Always | Never | Errors
# Which downloader to use
downloader: Curl   # Curl | Wget | Internal
# whether to run in offline mode
no-network: False
# whether/how to do gpg verification
gpg-setting: GPGNone # GPGStrict | GPGLax | GPGNone

# TUI key bindings,
# see https://hackage.haskell.org/package/vty-5.31/docs/Graphics-Vty-Input-Events.html#t:Key
# for possible values.
# It's also possible to define key+modifier, e.g.:
#   quit:
#     Key:
#       KChar: c
#     Mods: [MCtrl]
key-bindings:
  up:
    KUp: []
  down:
    KDown: []
  quit:
    KChar: 'q'
  install:
    KChar: 'i'
  uninstall:
    KChar: 'u'
  set:
    KChar: 's'
  changelog:
    KChar: 'c'
  show-all:
    KChar: 'a'
  show-all-tools:
    KChar: 't'

# The caching for the metadata files containing download info, depending on last access time
# of the file. These usually are in '~/.ghcup/cache/ghcup-<ver>.yaml'.
meta-cache: 300 # in seconds

# When trying to download ghcup metadata, this option decides what to do
# when the download fails:
#   1. Lax: use existing ~/.ghcup/cache/ghcup-<ver>.yaml as fallback (default)
#   2. Strict: fail hard
meta-mode: Lax # Strict | Lax

# Where to get GHC/cabal/hls download info/versions from. This is a list that performs
# union over tool versions, preferring the later entries.
url-source:
  ## Use the internal download uri, this is the default
  - GHCupURL

  ## Prefer stack supplied metadata (will still use GHCup metadata for versions not existing in stack metadata)
  # - StackSetupURL

  ## Add pre-release channel
  # - prereleases
  ## Add nightly channel
  # - https://ghc.gitlab.haskell.org/ghcup-metadata/ghcup-nightlies-0.0.7.yaml
  ## Add cross compiler channel
  # - cross

  ## Use dwarf bindist for 9.4.7 for ghcup metadata
  # - ghcup-info:
  #     ghcupDownloads:
  #       GHC:
  #         9.4.7:
  #           viTags: []
  #           viArch:
  #             A_64:
  #               Linux_UnknownLinux:
  #                 unknown_versioning:
  #                   dlUri: https://downloads.haskell.org/ghc/9.4.7/ghc-9.4.7-x86_64-deb10-linux-dwarf.tar.xz
  #                   dlSubdir:
  #                     RegexDir: "ghc-.*"
  #                   dlHash: b261b3438ba455e3cf757f9c8dc3a06fdc061ea8ec287a65b7809e25fe18bad4

  ## for stack metadata and the linux64-tinfo6 bindists, use static alpine for 9.8.1
  # - setup-info:
  #     ghc:
  #       linux64-tinfo6:
  #         9.8.1:
  #           url: "https://downloads.haskell.org/~ghc/9.8.1/ghc-9.8.1-x86_64-alpine3_12-linux-static.tar.xz"
  #           content-length: 229037440
  #           sha256: b48f3d3a508d0c140d1c801e04afc65e80c0d25e7e939a8a41edb387b26b81b3

# This is a way to override platform detection, e.g. when you're running
# a Ubuntu derivative based on 18.04, you could do:
#
# platform-override:
#   arch: A_64
#   platform:
#     contents: Ubuntu
#     tag: Linux
#   version: '18.04'
platform-override: null

# Support for mirrors. Currently there are 3 hosts you can mirror:
#   - github.com (for stack and some older HLS versions)
#   - raw.githubusercontent.com (for the yaml metadata)
#   - downloads.haskell.org (for everything else)
#
# E.g. when we have 'https://raw.githubusercontent.com/haskell/ghcup-metadata/master/ghcup-0.0.7.yaml'
# and the following mirror config
#
#  "raw.githubusercontent.com":
#    authority:
#      host: "mirror.sjtu.edu.cn"
#    pathPrefix: "ghcup/yaml"
#
# Then the resulting url will be 'https://mirror.sjtu.edu.cn/ghcup/yaml/haskell/ghcup-metadata/master/ghcup-0.0.7.yaml'
#mirrors:
#  "github.com":
#    authority:
#      host: "mirror.sjtu.edu.cn"
#  "raw.githubusercontent.com":
#    authority:
#      host: "mirror.sjtu.edu.cn"
#    pathPrefix: "ghcup/yaml"
#  "downloads.haskell.org":
#    authority:
#      host: "mirror.sjtu.edu.cn"

# Arguments to pass to the configure script of the prebuilt bindist.
#
# Do not pass '--prefix' here.
#
# GHCup by default passes '--disable-ld-override', so if you want to enable
# the vanilla way, which aggressively favors 'ld.gold' linker, add the following:
def-ghc-conf-options:
  - "--enable-ld-override"

# Use a pager for e.g. 'ghcup list' output. 'cmd' is optional (if omitted
# will try to discover pager via GHCUP_PAGER/PAGER env vars or a predefined set of executables).
#
# You can also set only a boolean value:
#   pager: true
#
# Or only a cmd (implies 'true' for all boolean values):
#   pager: "less -R"
pager:
  list: true     # enabled for list action
  cmd: "less -R" # the command

